<?php
class Model_[__CONTROLLER_CRUD_NAME__]
{
  	
	protected $_table_name='[__CRUD_TABLE_NAME__]';
	protected $_id_connection=[__CRUD_ID_CONNECTION__];
	protected $_db;
	protected $table;

	public function getTable(){

		$md=new Model_Conexoes();	
		$config=$md->getOne($this->_id_connection);
		$this->_db=$this->_connectionGeneric($config);
		$this->table=new Zend_Db_Table(array('name'=>$this->_table_name,'db'=>$this->_db));
	
	}
	
	public function setIdConnection($int){
	
		$this->_id_connection=$int;
	 
	}

	public function getIdConnection(){
	
		return $this->_id_connection;
	 
	}

	public function listAll(){
		$this->getTable();
		return $this->table->fetchAll()->toArray();
	 
	}

	public function listLike[__FIELD_SEARCHEABLE__]($string){

		$this->getTable();
		return $this->table->fetchAll($this->table->select()
					->setIntegrityCheck(false)
					->from(array('f' => $this->_table_name))
					->where("[__FIELD_SEARCHEABLE__] LIKE ?",'%'.$string.'%'))->toArray();
	 
	}
	
		
		
	public function getOne($id){

		$this->getTable();
		$table=$this->table;
		$query=$table->select()->where("[__CRUD_KEY_PARAM__] = ?", $id);
		return $table->fetchRow($query)->toArray();
	
	}
			
	
	public function insert(array $data){

		$this->getTable();
		$table	=$this->table;	
		$fields=$table->info(Zend_Db_Table_Abstract::COLS);
		foreach ($data as $field=> $value)
		{
			if(!in_array($field, $fields))
				{ unset($data[$field]);
				}
			
		}
	 return $table->insert($data); 
	 
	}

	public function update(array $data, $id){

		$this->getTable();
		$table=$this->table;
		$where = $table->getAdapter()->quoteInto('[__CRUD_KEY_PARAM__] = ?', $id);
		$updated_lines= $table->update($data, $where);
	 
		
	}

	public function delete($id){
		$this->getTable();
		$table=$this->table;
		$where = $table->getAdapter()->quoteInto('[__CRUD_KEY_PARAM__] = ?', $id);
		$table->delete($where);
	

	}

	public function _connectionGeneric($config){
		require_once 'Zend/Db.php';

		try{
			
			$db = Zend_Db::factory($config['factory'],$config);

		}catch(Exception $e){	

			$db= $e->getMessage();
			
			}
	
		return $db;

	}

}
